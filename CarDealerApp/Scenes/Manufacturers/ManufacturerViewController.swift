//
//  ManufacturerViewController.swift
//  CarDealerApp
//
//  Created by Nisum on 11/16/19.
//  Copyright (c) 2019 Orlando Arzola. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ManufacturerDisplayLogic: class {
    func displayLoading()
    func dismissLoading()
    func displayView(viewModel: Manufacturer.Manufacturer.ViewModel)
}

class ManufacturerViewController: UIViewController, ManufacturerDisplayLogic {
    var interactor: ManufacturerBusinessLogic?
    var router: (NSObjectProtocol & ManufacturerRoutingLogic & ManufacturerDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = ManufacturerInteractor()
        let presenter = ManufacturerPresenter()
        let router = ManufacturerRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        let request = Manufacturer.Manufacturer.Request(page: "0")
        interactor?.getManufacturers(request: request)
    }

    // MARK: - VIP methods

    func displayLoading() {

    }

    func dismissLoading() {

    }

    func displayView(viewModel: Manufacturer.Manufacturer.ViewModel) {

    }
}
